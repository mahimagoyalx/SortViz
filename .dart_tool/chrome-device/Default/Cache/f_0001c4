define(['dart_sdk', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/scheduler/ticker.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/gestures/monodrag.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/cupertino/thumb_painter.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/gestures/drag_details.dart'], (function load__packages__flutter__src__cupertino__slider_dart(dart_sdk, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__scheduler__ticker$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__gestures__monodrag$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__cupertino__thumb_painter$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__gestures__drag_details$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const debug = packages__flutter__src__widgets__widget_span$46dart.src__widgets__debug;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const colors = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__colors;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const ticker = packages__flutter__src__scheduler__ticker$46dart.src__scheduler__ticker;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const monodrag = packages__flutter__src__gestures__monodrag$46dart.src__gestures__monodrag;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const thumb_painter = packages__flutter__src__cupertino__thumb_painter$46dart.src__cupertino__thumb_painter;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  var slider = Object.create(dart.library);
  var $clamp = dartx.clamp;
  var $round = dartx.round;
  var $abs = dartx.abs;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295.0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 7,
        [_Location_line]: 241,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "divisions",
        [_Location_column]: 7,
        [_Location_line]: 242,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "activeColor",
        [_Location_column]: 7,
        [_Location_line]: 243,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "thumbColor",
        [_Location_column]: 7,
        [_Location_line]: 247,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onChanged",
        [_Location_column]: 7,
        [_Location_line]: 248,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onChangeStart",
        [_Location_column]: 7,
        [_Location_line]: 249,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onChangeEnd",
        [_Location_column]: 7,
        [_Location_line]: 250,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "vsync",
        [_Location_column]: 7,
        [_Location_line]: 251,
        [_Location_file]: null
      });
    },
    get C2() {
      return C[2] = dart.constList([C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10], T._LocationL());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 240,
        [_Location_file]: "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/slider.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: box.BoxConstraints.prototype,
        [BoxConstraints_maxHeight]: 44,
        [BoxConstraints_minHeight]: 44,
        [BoxConstraints_maxWidth]: 176,
        [BoxConstraints_minWidth]: 176
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name]: "TextDirection.rtl",
        index: 0
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.TextDirection.prototype,
        [_name]: "TextDirection.ltr",
        index: 1
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    }
  }, false);
  var C = Array(15).fill(void 0);
  var I = [
    "file:///C:/src/flutter/packages/flutter/lib/src/cupertino/slider.dart",
    "package:flutter/src/cupertino/slider.dart"
  ];
  var value$ = dart.privateName(slider, "CupertinoSlider.value");
  var onChanged$ = dart.privateName(slider, "CupertinoSlider.onChanged");
  var onChangeStart$ = dart.privateName(slider, "CupertinoSlider.onChangeStart");
  var onChangeEnd$ = dart.privateName(slider, "CupertinoSlider.onChangeEnd");
  var min$ = dart.privateName(slider, "CupertinoSlider.min");
  var max$ = dart.privateName(slider, "CupertinoSlider.max");
  var divisions$ = dart.privateName(slider, "CupertinoSlider.divisions");
  var activeColor$ = dart.privateName(slider, "CupertinoSlider.activeColor");
  var thumbColor$ = dart.privateName(slider, "CupertinoSlider.thumbColor");
  var Color_value = dart.privateName(ui, "Color.value");
  slider.CupertinoSlider = class CupertinoSlider extends framework.StatefulWidget {
    get value() {
      return this[value$];
    }
    set value(value) {
      super.value = value;
    }
    get onChanged() {
      return this[onChanged$];
    }
    set onChanged(value) {
      super.onChanged = value;
    }
    get onChangeStart() {
      return this[onChangeStart$];
    }
    set onChangeStart(value) {
      super.onChangeStart = value;
    }
    get onChangeEnd() {
      return this[onChangeEnd$];
    }
    set onChangeEnd(value) {
      super.onChangeEnd = value;
    }
    get min() {
      return this[min$];
    }
    set min(value) {
      super.min = value;
    }
    get max() {
      return this[max$];
    }
    set max(value) {
      super.max = value;
    }
    get divisions() {
      return this[divisions$];
    }
    set divisions(value) {
      super.divisions = value;
    }
    get activeColor() {
      return this[activeColor$];
    }
    set activeColor(value) {
      super.activeColor = value;
    }
    get thumbColor() {
      return this[thumbColor$];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    createState() {
      return new slider._CupertinoSliderState.new();
    }
    debugFillProperties(properties) {
      if (properties == null) dart.nullFailed(I[0], 211, 56, "properties");
      super.debugFillProperties(properties);
      properties.add(new diagnostics.DoubleProperty.new("value", this.value));
      properties.add(new diagnostics.DoubleProperty.new("min", this.min));
      properties.add(new diagnostics.DoubleProperty.new("max", this.max));
    }
  };
  (slider.CupertinoSlider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let value = opts && 'value' in opts ? opts.value : null;
    if (value == null) dart.nullFailed(I[0], 57, 19, "value");
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    let onChangeStart = opts && 'onChangeStart' in opts ? opts.onChangeStart : null;
    let onChangeEnd = opts && 'onChangeEnd' in opts ? opts.onChangeEnd : null;
    let min = opts && 'min' in opts ? opts.min : 0;
    if (min == null) dart.nullFailed(I[0], 61, 10, "min");
    let max = opts && 'max' in opts ? opts.max : 1;
    if (max == null) dart.nullFailed(I[0], 62, 10, "max");
    let divisions = opts && 'divisions' in opts ? opts.divisions : null;
    let activeColor = opts && 'activeColor' in opts ? opts.activeColor : null;
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : C[0] || CT.C0;
    if (thumbColor == null) dart.nullFailed(I[0], 65, 10, "thumbColor");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[value$] = value;
    this[onChanged$] = onChanged;
    this[onChangeStart$] = onChangeStart;
    this[onChangeEnd$] = onChangeEnd;
    this[min$] = min;
    this[max$] = max;
    this[divisions$] = divisions;
    this[activeColor$] = activeColor;
    this[thumbColor$] = thumbColor;
    if (!(value != null)) dart.assertFailed(null, I[0], 66, 15, "value != null");
    if (!(min != null)) dart.assertFailed(null, I[0], 67, 15, "min != null");
    if (!(max != null)) dart.assertFailed(null, I[0], 68, 15, "max != null");
    if (!(dart.notNull(value) >= dart.notNull(min) && dart.notNull(value) <= dart.notNull(max))) dart.assertFailed(null, I[0], 69, 15, "value >= min && value <= max");
    if (!(divisions == null || dart.notNull(divisions) > 0)) dart.assertFailed(null, I[0], 70, 15, "divisions == null || divisions > 0");
    if (!(thumbColor != null)) dart.assertFailed(null, I[0], 71, 15, "thumbColor != null");
    slider.CupertinoSlider.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slider.CupertinoSlider.prototype;
  dart.addTypeTests(slider.CupertinoSlider);
  dart.addTypeCaches(slider.CupertinoSlider);
  dart.setMethodSignature(slider.CupertinoSlider, () => ({
    __proto__: dart.getMethods(slider.CupertinoSlider.__proto__),
    createState: dart.fnType(slider._CupertinoSliderState, [])
  }));
  dart.setLibraryUri(slider.CupertinoSlider, I[1]);
  dart.setFieldSignature(slider.CupertinoSlider, () => ({
    __proto__: dart.getFields(slider.CupertinoSlider.__proto__),
    value: dart.finalFieldType(core.double),
    onChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.double]))),
    onChangeStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.double]))),
    onChangeEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.double]))),
    min: dart.finalFieldType(core.double),
    max: dart.finalFieldType(core.double),
    divisions: dart.finalFieldType(dart.nullable(core.int)),
    activeColor: dart.finalFieldType(dart.nullable(ui.Color)),
    thumbColor: dart.finalFieldType(ui.Color)
  }));
  var _handleChanged = dart.privateName(slider, "_handleChanged");
  var _handleDragStart = dart.privateName(slider, "_handleDragStart");
  var _handleDragEnd = dart.privateName(slider, "_handleDragEnd");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  const State_TickerProviderStateMixin$36 = class State_TickerProviderStateMixin extends framework.State$(slider.CupertinoSlider) {};
  (State_TickerProviderStateMixin$36.new = function() {
    ticker_provider.TickerProviderStateMixin$(slider.CupertinoSlider)[dart.mixinNew].call(this);
    State_TickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_TickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_TickerProviderStateMixin$36, ticker_provider.TickerProviderStateMixin$(slider.CupertinoSlider));
  slider._CupertinoSliderState = class _CupertinoSliderState extends State_TickerProviderStateMixin$36 {
    [_handleChanged](value) {
      if (value == null) dart.nullFailed(I[0], 220, 30, "value");
      if (!(this.widget.onChanged != null)) dart.assertFailed(null, I[0], 221, 12, "widget.onChanged != null");
      let lerpValue = dart.nullCheck(ui.lerpDouble(this.widget.min, this.widget.max, value));
      if (lerpValue !== this.widget.value) {
        dart.nullCheck(this.widget.onChanged)(lerpValue);
      }
    }
    [_handleDragStart](value) {
      if (value == null) dart.nullFailed(I[0], 228, 32, "value");
      if (!(this.widget.onChangeStart != null)) dart.assertFailed(null, I[0], 229, 12, "widget.onChangeStart != null");
      dart.nullCheck(this.widget.onChangeStart)(dart.nullCheck(ui.lerpDouble(this.widget.min, this.widget.max, value)));
    }
    [_handleDragEnd](value) {
      if (value == null) dart.nullFailed(I[0], 233, 30, "value");
      if (!(this.widget.onChangeEnd != null)) dart.assertFailed(null, I[0], 234, 12, "widget.onChangeEnd != null");
      dart.nullCheck(this.widget.onChangeEnd)(dart.nullCheck(ui.lerpDouble(this.widget.min, this.widget.max, value)));
    }
    build(context) {
      let t0;
      if (context == null) dart.nullFailed(I[0], 239, 29, "context");
      return new slider._CupertinoSliderRenderObjectWidget.new({value: (dart.notNull(this.widget.value) - dart.notNull(this.widget.min)) / (dart.notNull(this.widget.max) - dart.notNull(this.widget.min)), divisions: this.widget.divisions, activeColor: colors.CupertinoDynamicColor.resolve((t0 = this.widget.activeColor, t0 == null ? theme.CupertinoTheme.of(context).primaryColor : t0), context), thumbColor: this.widget.thumbColor, onChanged: this.widget.onChanged != null ? dart.bind(this, _handleChanged) : null, onChangeStart: this.widget.onChangeStart != null ? dart.bind(this, _handleDragStart) : null, onChangeEnd: this.widget.onChangeEnd != null ? dart.bind(this, _handleDragEnd) : null, vsync: this, $creationLocationd_0dea112b090073317d4: C[1] || CT.C1});
    }
  };
  (slider._CupertinoSliderState.new = function() {
    slider._CupertinoSliderState.__proto__.new.call(this);
    ;
  }).prototype = slider._CupertinoSliderState.prototype;
  dart.addTypeTests(slider._CupertinoSliderState);
  dart.addTypeCaches(slider._CupertinoSliderState);
  dart.setMethodSignature(slider._CupertinoSliderState, () => ({
    __proto__: dart.getMethods(slider._CupertinoSliderState.__proto__),
    [_handleChanged]: dart.fnType(dart.void, [core.double]),
    [_handleDragStart]: dart.fnType(dart.void, [core.double]),
    [_handleDragEnd]: dart.fnType(dart.void, [core.double]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(slider._CupertinoSliderState, I[1]);
  var value$0 = dart.privateName(slider, "_CupertinoSliderRenderObjectWidget.value");
  var divisions$0 = dart.privateName(slider, "_CupertinoSliderRenderObjectWidget.divisions");
  var activeColor$0 = dart.privateName(slider, "_CupertinoSliderRenderObjectWidget.activeColor");
  var thumbColor$0 = dart.privateName(slider, "_CupertinoSliderRenderObjectWidget.thumbColor");
  var onChanged$0 = dart.privateName(slider, "_CupertinoSliderRenderObjectWidget.onChanged");
  var onChangeStart$0 = dart.privateName(slider, "_CupertinoSliderRenderObjectWidget.onChangeStart");
  var onChangeEnd$0 = dart.privateName(slider, "_CupertinoSliderRenderObjectWidget.onChangeEnd");
  var vsync$ = dart.privateName(slider, "_CupertinoSliderRenderObjectWidget.vsync");
  slider._CupertinoSliderRenderObjectWidget = class _CupertinoSliderRenderObjectWidget extends framework.LeafRenderObjectWidget {
    get value() {
      return this[value$0];
    }
    set value(value) {
      super.value = value;
    }
    get divisions() {
      return this[divisions$0];
    }
    set divisions(value) {
      super.divisions = value;
    }
    get activeColor() {
      return this[activeColor$0];
    }
    set activeColor(value) {
      super.activeColor = value;
    }
    get thumbColor() {
      return this[thumbColor$0];
    }
    set thumbColor(value) {
      super.thumbColor = value;
    }
    get onChanged() {
      return this[onChanged$0];
    }
    set onChanged(value) {
      super.onChanged = value;
    }
    get onChangeStart() {
      return this[onChangeStart$0];
    }
    set onChangeStart(value) {
      super.onChangeStart = value;
    }
    get onChangeEnd() {
      return this[onChangeEnd$0];
    }
    set onChangeEnd(value) {
      super.onChangeEnd = value;
    }
    get vsync() {
      return this[vsync$];
    }
    set vsync(value) {
      super.vsync = value;
    }
    createRenderObject(context) {
      if (context == null) dart.nullFailed(I[0], 279, 58, "context");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[0], 280, 12, "debugCheckHasDirectionality(context)");
      return new slider._RenderCupertinoSlider.new({value: this.value, divisions: this.divisions, activeColor: this.activeColor, thumbColor: colors.CupertinoDynamicColor.resolve(this.thumbColor, context), trackColor: colors.CupertinoDynamicColor.resolve(colors.CupertinoColors.systemFill, context), onChanged: this.onChanged, onChangeStart: this.onChangeStart, onChangeEnd: this.onChangeEnd, vsync: this.vsync, textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t0;
      if (context == null) dart.nullFailed(I[0], 296, 40, "context");
      slider._RenderCupertinoSlider.as(renderObject);
      if (renderObject == null) dart.nullFailed(I[0], 296, 72, "renderObject");
      if (!dart.test(debug.debugCheckHasDirectionality(context))) dart.assertFailed(null, I[0], 297, 12, "debugCheckHasDirectionality(context)");
      t0 = renderObject;
      (() => {
        t0.value = this.value;
        t0.divisions = this.divisions;
        t0.activeColor = this.activeColor;
        t0.thumbColor = colors.CupertinoDynamicColor.resolve(this.thumbColor, context);
        t0.trackColor = colors.CupertinoDynamicColor.resolve(colors.CupertinoColors.systemFill, context);
        t0.onChanged = this.onChanged;
        t0.onChangeStart = this.onChangeStart;
        t0.onChangeEnd = this.onChangeEnd;
        t0.textDirection = basic.Directionality.of(context);
        return t0;
      })();
    }
  };
  (slider._CupertinoSliderRenderObjectWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let value = opts && 'value' in opts ? opts.value : null;
    if (value == null) dart.nullFailed(I[0], 259, 19, "value");
    let divisions = opts && 'divisions' in opts ? opts.divisions : null;
    let activeColor = opts && 'activeColor' in opts ? opts.activeColor : null;
    if (activeColor == null) dart.nullFailed(I[0], 261, 19, "activeColor");
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    if (thumbColor == null) dart.nullFailed(I[0], 262, 19, "thumbColor");
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    let onChangeStart = opts && 'onChangeStart' in opts ? opts.onChangeStart : null;
    let onChangeEnd = opts && 'onChangeEnd' in opts ? opts.onChangeEnd : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(I[0], 266, 19, "vsync");
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[value$0] = value;
    this[divisions$0] = divisions;
    this[activeColor$0] = activeColor;
    this[thumbColor$0] = thumbColor;
    this[onChanged$0] = onChanged;
    this[onChangeStart$0] = onChangeStart;
    this[onChangeEnd$0] = onChangeEnd;
    this[vsync$] = vsync;
    slider._CupertinoSliderRenderObjectWidget.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = slider._CupertinoSliderRenderObjectWidget.prototype;
  dart.addTypeTests(slider._CupertinoSliderRenderObjectWidget);
  dart.addTypeCaches(slider._CupertinoSliderRenderObjectWidget);
  dart.setMethodSignature(slider._CupertinoSliderRenderObjectWidget, () => ({
    __proto__: dart.getMethods(slider._CupertinoSliderRenderObjectWidget.__proto__),
    createRenderObject: dart.fnType(slider._RenderCupertinoSlider, [framework.BuildContext])
  }));
  dart.setLibraryUri(slider._CupertinoSliderRenderObjectWidget, I[1]);
  dart.setFieldSignature(slider._CupertinoSliderRenderObjectWidget, () => ({
    __proto__: dart.getFields(slider._CupertinoSliderRenderObjectWidget.__proto__),
    value: dart.finalFieldType(core.double),
    divisions: dart.finalFieldType(dart.nullable(core.int)),
    activeColor: dart.finalFieldType(ui.Color),
    thumbColor: dart.finalFieldType(ui.Color),
    onChanged: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.double]))),
    onChangeStart: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.double]))),
    onChangeEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [core.double]))),
    vsync: dart.finalFieldType(ticker.TickerProvider)
  }));
  var ___RenderCupertinoSlider__position = dart.privateName(slider, "_#_RenderCupertinoSlider#_position");
  var ___RenderCupertinoSlider__position_isSet = dart.privateName(slider, "_#_RenderCupertinoSlider#_position#isSet");
  var ___RenderCupertinoSlider__drag = dart.privateName(slider, "_#_RenderCupertinoSlider#_drag");
  var ___RenderCupertinoSlider__drag_isSet = dart.privateName(slider, "_#_RenderCupertinoSlider#_drag#isSet");
  var _currentDragValue = dart.privateName(slider, "_currentDragValue");
  var _value = dart.privateName(slider, "_value");
  var _divisions = dart.privateName(slider, "_divisions");
  var _activeColor = dart.privateName(slider, "_activeColor");
  var _thumbColor = dart.privateName(slider, "_thumbColor");
  var _trackColor = dart.privateName(slider, "_trackColor");
  var _onChanged = dart.privateName(slider, "_onChanged");
  var _textDirection = dart.privateName(slider, "_textDirection");
  var BoxConstraints_maxHeight = dart.privateName(box, "BoxConstraints.maxHeight");
  var BoxConstraints_minHeight = dart.privateName(box, "BoxConstraints.minHeight");
  var BoxConstraints_maxWidth = dart.privateName(box, "BoxConstraints.maxWidth");
  var BoxConstraints_minWidth = dart.privateName(box, "BoxConstraints.minWidth");
  var _drag = dart.privateName(slider, "_drag");
  var _handleDragUpdate = dart.privateName(slider, "_handleDragUpdate");
  var _position = dart.privateName(slider, "_position");
  var _discretizedCurrentDragValue = dart.privateName(slider, "_discretizedCurrentDragValue");
  var _trackLeft = dart.privateName(slider, "_trackLeft");
  var _trackRight = dart.privateName(slider, "_trackRight");
  var _name = dart.privateName(ui, "_name");
  var _thumbCenter = dart.privateName(slider, "_thumbCenter");
  var _startInteraction = dart.privateName(slider, "_startInteraction");
  var _endInteraction = dart.privateName(slider, "_endInteraction");
  var _increaseAction = dart.privateName(slider, "_increaseAction");
  var _decreaseAction = dart.privateName(slider, "_decreaseAction");
  var _semanticActionUnit = dart.privateName(slider, "_semanticActionUnit");
  slider._RenderCupertinoSlider = class _RenderCupertinoSlider extends proxy_box.RenderConstrainedBox {
    get value() {
      return this[_value];
    }
    set value(newValue) {
      if (newValue == null) dart.nullFailed(I[0], 355, 20, "newValue");
      if (!(newValue != null && dart.notNull(newValue) >= 0.0 && dart.notNull(newValue) <= 1.0)) dart.assertFailed(null, I[0], 356, 12, "newValue != null && newValue >= 0.0 && newValue <= 1.0");
      if (newValue == this[_value]) return;
      this[_value] = newValue;
      if (this.divisions != null)
        this[_position].animateTo(newValue, {curve: curves.Curves.fastOutSlowIn});
      else
        this[_position].value = newValue;
      this.markNeedsSemanticsUpdate();
    }
    get divisions() {
      return this[_divisions];
    }
    set divisions(value) {
      if (value == this[_divisions]) return;
      this[_divisions] = value;
      this.markNeedsPaint();
    }
    get activeColor() {
      return this[_activeColor];
    }
    set activeColor(value) {
      if (value == null) dart.nullFailed(I[0], 378, 25, "value");
      if (dart.equals(value, this[_activeColor])) return;
      this[_activeColor] = value;
      this.markNeedsPaint();
    }
    get thumbColor() {
      return this[_thumbColor];
    }
    set thumbColor(value) {
      if (value == null) dart.nullFailed(I[0], 387, 24, "value");
      if (dart.equals(value, this[_thumbColor])) return;
      this[_thumbColor] = value;
      this.markNeedsPaint();
    }
    get trackColor() {
      return this[_trackColor];
    }
    set trackColor(value) {
      if (value == null) dart.nullFailed(I[0], 396, 24, "value");
      if (dart.equals(value, this[_trackColor])) return;
      this[_trackColor] = value;
      this.markNeedsPaint();
    }
    get onChanged() {
      return this[_onChanged];
    }
    set onChanged(value) {
      if (dart.equals(value, this[_onChanged])) return;
      let wasInteractive = this.isInteractive;
      this[_onChanged] = value;
      if (wasInteractive != this.isInteractive) this.markNeedsSemanticsUpdate();
    }
    get textDirection() {
      return this[_textDirection];
    }
    set textDirection(value) {
      if (value == null) dart.nullFailed(I[0], 419, 35, "value");
      if (!(value != null)) dart.assertFailed(null, I[0], 420, 12, "value != null");
      if (this[_textDirection] == value) return;
      this[_textDirection] = value;
      this.markNeedsPaint();
    }
    get [_position]() {
      let t0;
      return dart.test(this[___RenderCupertinoSlider__position_isSet]) ? (t0 = this[___RenderCupertinoSlider__position], t0) : dart.throw(new _internal.LateError.fieldNI("_position"));
    }
    set [_position](t0) {
      if (t0 == null) dart.nullFailed(I[0], 427, 28, "null");
      this[___RenderCupertinoSlider__position_isSet] = true;
      this[___RenderCupertinoSlider__position] = t0;
    }
    get [_drag]() {
      let t1;
      return dart.test(this[___RenderCupertinoSlider__drag_isSet]) ? (t1 = this[___RenderCupertinoSlider__drag], t1) : dart.throw(new _internal.LateError.fieldNI("_drag"));
    }
    set [_drag](t1) {
      if (t1 == null) dart.nullFailed(I[0], 429, 40, "null");
      this[___RenderCupertinoSlider__drag_isSet] = true;
      this[___RenderCupertinoSlider__drag] = t1;
    }
    get [_discretizedCurrentDragValue]() {
      let dragValue = this[_currentDragValue][$clamp](0.0, 1.0);
      if (this.divisions != null) dragValue = (dragValue * dart.nullCheck(this.divisions))[$round]() / dart.nullCheck(this.divisions);
      return dragValue;
    }
    get [_trackLeft]() {
      return 8;
    }
    get [_trackRight]() {
      return dart.notNull(this.size.width) - 8;
    }
    get [_thumbCenter]() {
      let visualPosition = null;
      switch (this.textDirection) {
        case C[12] || CT.C12:
        {
          visualPosition = 1.0 - dart.notNull(this[_value]);
          break;
        }
        case C[13] || CT.C13:
        {
          visualPosition = this[_value];
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      return dart.nullCheck(ui.lerpDouble(dart.notNull(this[_trackLeft]) + 14, dart.notNull(this[_trackRight]) - 14, visualPosition));
    }
    get isInteractive() {
      return this.onChanged != null;
    }
    [_handleDragStart](details) {
      if (details == null) dart.nullFailed(I[0], 456, 42, "details");
      return this[_startInteraction](details.globalPosition);
    }
    [_handleDragUpdate](details) {
      if (details == null) dart.nullFailed(I[0], 458, 44, "details");
      if (dart.test(this.isInteractive)) {
        let extent = math.max(core.double, 8, dart.notNull(this.size.width) - 2.0 * (8 + 14));
        let valueDelta = dart.nullCheck(details.primaryDelta) / extent;
        switch (this.textDirection) {
          case C[12] || CT.C12:
          {
            this[_currentDragValue] = dart.notNull(this[_currentDragValue]) - valueDelta;
            break;
          }
          case C[13] || CT.C13:
          {
            this[_currentDragValue] = dart.notNull(this[_currentDragValue]) + valueDelta;
            break;
          }
          default:
          {
            dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
          }
        }
        dart.nullCheck(this.onChanged)(this[_discretizedCurrentDragValue]);
      }
    }
    [_handleDragEnd](details) {
      if (details == null) dart.nullFailed(I[0], 474, 38, "details");
      return this[_endInteraction]();
    }
    [_startInteraction](globalPosition) {
      let t2;
      if (globalPosition == null) dart.nullFailed(I[0], 476, 33, "globalPosition");
      if (dart.test(this.isInteractive)) {
        t2 = this.onChangeStart;
        t2 == null ? null : t2(this[_discretizedCurrentDragValue]);
        this[_currentDragValue] = this[_value];
        dart.nullCheck(this.onChanged)(this[_discretizedCurrentDragValue]);
      }
    }
    [_endInteraction]() {
      let t2;
      t2 = this.onChangeEnd;
      t2 == null ? null : t2(this[_discretizedCurrentDragValue]);
      this[_currentDragValue] = 0.0;
    }
    hitTestSelf(position) {
      if (position == null) dart.nullFailed(I[0], 490, 27, "position");
      return (dart.notNull(position.dx) - dart.notNull(this[_thumbCenter]))[$abs]() < 14 + 8;
    }
    handleEvent(event, entry) {
      if (event == null) dart.nullFailed(I[0], 495, 33, "event");
      box.BoxHitTestEntry.as(entry);
      if (entry == null) dart.nullFailed(I[0], 495, 56, "entry");
      if (!dart.test(this.debugHandleEvent(event, entry))) dart.assertFailed(null, I[0], 496, 12, "debugHandleEvent(event, entry)");
      if (events.PointerDownEvent.is(event) && dart.test(this.isInteractive)) this[_drag].addPointer(event);
    }
    paint(context, offset) {
      let t2, t2$;
      if (context == null) dart.nullFailed(I[0], 502, 30, "context");
      if (offset == null) dart.nullFailed(I[0], 502, 46, "offset");
      let visualPosition = null;
      let leftColor = null;
      let rightColor = null;
      switch (this.textDirection) {
        case C[12] || CT.C12:
        {
          visualPosition = 1.0 - dart.notNull(this[_position].value);
          leftColor = this[_activeColor];
          rightColor = this.trackColor;
          break;
        }
        case C[13] || CT.C13:
        {
          visualPosition = this[_position].value;
          leftColor = this.trackColor;
          rightColor = this[_activeColor];
          break;
        }
        default:
        {
          dart.throw(new _internal.ReachabilityError.new("`null` encountered as case in a switch expression with a non-nullable enum type."));
        }
      }
      let trackCenter = dart.notNull(offset.dy) + dart.notNull(this.size.height) / 2.0;
      let trackLeft = dart.notNull(offset.dx) + dart.notNull(this[_trackLeft]);
      let trackTop = trackCenter - 1.0;
      let trackBottom = trackCenter + 1.0;
      let trackRight = dart.notNull(offset.dx) + dart.notNull(this[_trackRight]);
      let trackActive = dart.notNull(offset.dx) + dart.notNull(this[_thumbCenter]);
      let canvas = context.canvas;
      if (dart.notNull(visualPosition) > 0.0) {
        let paint = (t2 = ui.Paint.new(), (() => {
          t2.color = rightColor;
          return t2;
        })());
        canvas.drawRRect(new ui.RRect.fromLTRBXY(trackLeft, trackTop, trackActive, trackBottom, 1.0, 1.0), paint);
      }
      if (dart.notNull(visualPosition) < 1.0) {
        let paint = (t2$ = ui.Paint.new(), (() => {
          t2$.color = leftColor;
          return t2$;
        })());
        canvas.drawRRect(new ui.RRect.fromLTRBXY(trackActive, trackTop, trackRight, trackBottom, 1.0, 1.0), paint);
      }
      let thumbCenter = new ui.Offset.new(trackActive, trackCenter);
      new thumb_painter.CupertinoThumbPainter.new({color: this.thumbColor}).paint(canvas, new ui.Rect.fromCircle({center: thumbCenter, radius: 14}));
    }
    describeSemanticsConfiguration(config) {
      if (config == null) dart.nullFailed(I[0], 543, 62, "config");
      super.describeSemanticsConfiguration(config);
      config.isSemanticBoundary = this.isInteractive;
      config.isSlider = true;
      if (dart.test(this.isInteractive)) {
        config.textDirection = this.textDirection;
        config.onIncrease = dart.bind(this, _increaseAction);
        config.onDecrease = dart.bind(this, _decreaseAction);
        config.value = dart.str((dart.notNull(this.value) * 100)[$round]()) + "%";
        config.increasedValue = dart.str(((dart.notNull(this.value) + dart.notNull(this[_semanticActionUnit]))[$clamp](0.0, 1.0) * 100)[$round]()) + "%";
        config.decreasedValue = dart.str(((dart.notNull(this.value) - dart.notNull(this[_semanticActionUnit]))[$clamp](0.0, 1.0) * 100)[$round]()) + "%";
      }
    }
    get [_semanticActionUnit]() {
      return this.divisions != null ? 1.0 / dart.nullCheck(this.divisions) : 0.1;
    }
    [_increaseAction]() {
      if (dart.test(this.isInteractive)) dart.nullCheck(this.onChanged)((dart.notNull(this.value) + dart.notNull(this[_semanticActionUnit]))[$clamp](0.0, 1.0));
    }
    [_decreaseAction]() {
      if (dart.test(this.isInteractive)) dart.nullCheck(this.onChanged)((dart.notNull(this.value) - dart.notNull(this[_semanticActionUnit]))[$clamp](0.0, 1.0));
    }
  };
  (slider._RenderCupertinoSlider.new = function(opts) {
    let t0, t0$;
    let value = opts && 'value' in opts ? opts.value : null;
    if (value == null) dart.nullFailed(I[0], 322, 21, "value");
    let divisions = opts && 'divisions' in opts ? opts.divisions : null;
    let activeColor = opts && 'activeColor' in opts ? opts.activeColor : null;
    if (activeColor == null) dart.nullFailed(I[0], 324, 20, "activeColor");
    let thumbColor = opts && 'thumbColor' in opts ? opts.thumbColor : null;
    if (thumbColor == null) dart.nullFailed(I[0], 325, 20, "thumbColor");
    let trackColor = opts && 'trackColor' in opts ? opts.trackColor : null;
    if (trackColor == null) dart.nullFailed(I[0], 326, 20, "trackColor");
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    let onChangeStart = opts && 'onChangeStart' in opts ? opts.onChangeStart : null;
    let onChangeEnd = opts && 'onChangeEnd' in opts ? opts.onChangeEnd : null;
    let vsync = opts && 'vsync' in opts ? opts.vsync : null;
    if (vsync == null) dart.nullFailed(I[0], 330, 29, "vsync");
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    if (textDirection == null) dart.nullFailed(I[0], 331, 28, "textDirection");
    this[___RenderCupertinoSlider__position] = null;
    this[___RenderCupertinoSlider__position_isSet] = false;
    this[___RenderCupertinoSlider__drag] = null;
    this[___RenderCupertinoSlider__drag_isSet] = false;
    this[_currentDragValue] = 0.0;
    this.onChangeStart = onChangeStart;
    this.onChangeEnd = onChangeEnd;
    if (!(value != null && dart.notNull(value) >= 0.0 && dart.notNull(value) <= 1.0)) dart.assertFailed(null, I[0], 332, 15, "value != null && value >= 0.0 && value <= 1.0");
    if (!(textDirection != null)) dart.assertFailed(null, I[0], 333, 15, "textDirection != null");
    this[_value] = value;
    this[_divisions] = divisions;
    this[_activeColor] = activeColor;
    this[_thumbColor] = thumbColor;
    this[_trackColor] = trackColor;
    this[_onChanged] = onChanged;
    this[_textDirection] = textDirection;
    slider._RenderCupertinoSlider.__proto__.new.call(this, {additionalConstraints: C[11] || CT.C11});
    this[_drag] = (t0 = new monodrag.HorizontalDragGestureRecognizer.new(), (() => {
      t0.onStart = dart.bind(this, _handleDragStart);
      t0.onUpdate = dart.bind(this, _handleDragUpdate);
      t0.onEnd = dart.bind(this, _handleDragEnd);
      return t0;
    })());
    this[_position] = (t0$ = new animation_controller.AnimationController.new({value: value, duration: slider._kDiscreteTransitionDuration, vsync: vsync}), (() => {
      t0$.addListener(dart.bind(this, 'markNeedsPaint'));
      return t0$;
    })());
  }).prototype = slider._RenderCupertinoSlider.prototype;
  dart.addTypeTests(slider._RenderCupertinoSlider);
  dart.addTypeCaches(slider._RenderCupertinoSlider);
  dart.setMethodSignature(slider._RenderCupertinoSlider, () => ({
    __proto__: dart.getMethods(slider._RenderCupertinoSlider.__proto__),
    [_handleDragStart]: dart.fnType(dart.void, [drag_details.DragStartDetails]),
    [_handleDragUpdate]: dart.fnType(dart.void, [drag_details.DragUpdateDetails]),
    [_handleDragEnd]: dart.fnType(dart.void, [drag_details.DragEndDetails]),
    [_startInteraction]: dart.fnType(dart.void, [ui.Offset]),
    [_endInteraction]: dart.fnType(dart.void, []),
    [_increaseAction]: dart.fnType(dart.void, []),
    [_decreaseAction]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(slider._RenderCupertinoSlider, () => ({
    __proto__: dart.getGetters(slider._RenderCupertinoSlider.__proto__),
    value: core.double,
    divisions: dart.nullable(core.int),
    activeColor: ui.Color,
    thumbColor: ui.Color,
    trackColor: ui.Color,
    onChanged: dart.nullable(dart.fnType(dart.void, [core.double])),
    textDirection: ui.TextDirection,
    [_position]: animation_controller.AnimationController,
    [_drag]: monodrag.HorizontalDragGestureRecognizer,
    [_discretizedCurrentDragValue]: core.double,
    [_trackLeft]: core.double,
    [_trackRight]: core.double,
    [_thumbCenter]: core.double,
    isInteractive: core.bool,
    [_semanticActionUnit]: core.double
  }));
  dart.setSetterSignature(slider._RenderCupertinoSlider, () => ({
    __proto__: dart.getSetters(slider._RenderCupertinoSlider.__proto__),
    value: core.double,
    divisions: dart.nullable(core.int),
    activeColor: ui.Color,
    thumbColor: ui.Color,
    trackColor: ui.Color,
    onChanged: dart.nullable(dart.fnType(dart.void, [core.double])),
    textDirection: ui.TextDirection,
    [_position]: animation_controller.AnimationController,
    [_drag]: monodrag.HorizontalDragGestureRecognizer
  }));
  dart.setLibraryUri(slider._RenderCupertinoSlider, I[1]);
  dart.setFieldSignature(slider._RenderCupertinoSlider, () => ({
    __proto__: dart.getFields(slider._RenderCupertinoSlider.__proto__),
    [_value]: dart.fieldType(core.double),
    [_divisions]: dart.fieldType(dart.nullable(core.int)),
    [_activeColor]: dart.fieldType(ui.Color),
    [_thumbColor]: dart.fieldType(ui.Color),
    [_trackColor]: dart.fieldType(ui.Color),
    [_onChanged]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [core.double]))),
    onChangeStart: dart.fieldType(dart.nullable(dart.fnType(dart.void, [core.double]))),
    onChangeEnd: dart.fieldType(dart.nullable(dart.fnType(dart.void, [core.double]))),
    [_textDirection]: dart.fieldType(ui.TextDirection),
    [___RenderCupertinoSlider__position]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [___RenderCupertinoSlider__position_isSet]: dart.fieldType(core.bool),
    [___RenderCupertinoSlider__drag]: dart.fieldType(dart.nullable(monodrag.HorizontalDragGestureRecognizer)),
    [___RenderCupertinoSlider__drag_isSet]: dart.fieldType(core.bool),
    [_currentDragValue]: dart.fieldType(core.double)
  }));
  var Duration__duration = dart.privateName(core, "Duration._duration");
  dart.defineLazy(slider, {
    /*slider._kPadding*/get _kPadding() {
      return 8;
    },
    /*slider._kSliderHeight*/get _kSliderHeight() {
      return 44;
    },
    /*slider._kSliderWidth*/get _kSliderWidth() {
      return 176;
    },
    /*slider._kDiscreteTransitionDuration*/get _kDiscreteTransitionDuration() {
      return C[14] || CT.C14;
    },
    /*slider._kAdjustmentUnit*/get _kAdjustmentUnit() {
      return 0.1;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/cupertino/slider.dart", {
    "package:flutter/src/cupertino/slider.dart": slider
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["slider.dart"],"names":[],"mappings":"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","file":"../../../../../../../../E:/packages/flutter/src/cupertino/slider.dart.lib.js"}');
  // Exports:
  return {
    src__cupertino__slider: slider
  };
}));

//# sourceMappingURL=slider.dart.lib.js.map
